{
	"info": {
		"_postman_id": "ac5fe633-d142-4bac-9ce6-ae78533de6dc",
		"name": "APIAutomation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Test to confirm status code is correct\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"//Test to confirm status code contains a string\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});\r",
							"//Test to confirm status code contains string\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"createdAt\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/user",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"user"
					]
				},
				"description": "{{base URL}}/index.php/todo"
			},
			"response": []
		},
		{
			"name": "New record in data base",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Test to confirm status code is correct\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Test to confirm status code is OK\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"//Test to confirm status code contains string\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"updatedAt\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/user/2",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"user",
						"2"
					]
				},
				"description": "{{base URL}}/index.php/todo"
			},
			"response": []
		},
		{
			"name": "A user record",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Test to confirm status code is correct\r",
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"//Test to confirm status code has no content\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"No Content\");\r",
							"});\r",
							"//Test to confirm that body is empty\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/users/2",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				},
				"description": "{{base URL}}/index.php/todo"
			},
			"response": []
		},
		{
			"name": "Get all entries",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Test to show status code is 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Test to confirm status string is OK\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"//Test to show response body has string\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Task 2\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base URL}}/index.php/todo",
					"host": [
						"{{base URL}}"
					],
					"path": [
						"index.php",
						"todo"
					]
				},
				"description": "{{base URL}}/index.php/todo"
			},
			"response": []
		},
		{
			"name": "Get single user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Test to show status is 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Test to show status contains string\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"//Test to show response body has string\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Task 2\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base URL}}/index.php/todo/2",
					"host": [
						"{{base URL}}"
					],
					"path": [
						"index.php",
						"todo",
						"2"
					]
				},
				"description": "{{base URL}}/index.php/todo/2"
			},
			"response": []
		}
	]
}